//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "articles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub category_id: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub thumb: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub author: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub descption: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub visit: i32,
    pub is_elite: i32,
    pub is_top: i32,
    pub is_hot: i32,
    pub status: i32,
    pub sort: i32,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub created_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub updated_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")", nullable)]
    pub deleted_at: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::categories::Entity",
        from = "Column::CategoryId",
        to = "super::categories::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Categories,
}

impl Related<super::categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Categories.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
