//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "member_teams")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub owner_uid: i32,
    pub parent_uid: i32,
    pub member_id: i32,
    pub level: i32,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub created_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub updated_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")", nullable)]
    pub deleted_at: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::members::Entity",
        from = "Column::MemberId",
        to = "super::members::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Members3,
    #[sea_orm(
        belongs_to = "super::members::Entity",
        from = "Column::ParentUid",
        to = "super::members::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Members2,
    #[sea_orm(
        belongs_to = "super::members::Entity",
        from = "Column::OwnerUid",
        to = "super::members::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Members1,
}

impl ActiveModelBehavior for ActiveModel {}
