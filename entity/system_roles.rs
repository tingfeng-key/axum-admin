//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "system_roles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_type = "Text")]
    pub sign: String,
    pub sort: i32,
    #[sea_orm(column_type = "Text")]
    pub describe: String,
    pub status: i32,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub created_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub updated_at: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")", nullable)]
    pub deleted_at: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::system_role_menus::Entity")]
    SystemRoleMenus,
    #[sea_orm(has_many = "super::system_users::Entity")]
    SystemUsers,
}

impl Related<super::system_role_menus::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemRoleMenus.def()
    }
}

impl Related<super::system_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
