//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "system_action_logs")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i32,
    pub menu_id: i32,
    #[sea_orm(column_type = "Text")]
    pub menu_names: String,
    #[sea_orm(column_type = "Text")]
    pub ip_address: String,
    #[sea_orm(column_type = "Text")]
    pub ip_address_name: String,
    #[sea_orm(column_type = "Text")]
    pub browser_agent: String,
    #[sea_orm(column_type = "custom(\"DATETIME\")")]
    pub created_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::system_menus::Entity",
        from = "Column::MenuId",
        to = "super::system_menus::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    SystemMenus,
    #[sea_orm(
        belongs_to = "super::system_users::Entity",
        from = "Column::UserId",
        to = "super::system_users::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    SystemUsers,
}

impl Related<super::system_menus::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemMenus.def()
    }
}

impl Related<super::system_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
